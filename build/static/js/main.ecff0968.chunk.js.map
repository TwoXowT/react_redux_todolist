{"version":3,"sources":["store/actions/action.js","store/actionCreators/actionCreators.js","components/Task.jsx","components/TaskList.jsx","components/AddTask.jsx","components/weekProgresBar/WeekProgress.jsx","components/navbar/Navbar.jsx","components/timedata/TimeData.jsx","App.js","store/reducers/inithialState.js","store/reducers/root.js","store/reducers/index.js","index.js"],"names":["ADD_TASK","REMOVE_TASK","DONE_TASK","INC_CREATE","INC_DELETE","INC_DONE","ADD_CATEGORY","nextTodoId","addTask","text","category","type","id","inc_create_task","Task","task","dispatch","useDispatch","buttonDoneClick","completeStatus","buttonDeleteClick","removeTask","className","onClick","color","fontSize","TaskList","useContext","Context","context","taskList","useSelector","state","console","log","todos","filter","map","AddTask","createTask","useState","setText","onKeyDown","e","key","value","onChange","target","WeekProgress","data","countCreate","countDone","countDelete","Navbar","setContext","isShow","setIsShow","newCategory","setNewCategory","items","element","placeholder","addCategory","TimeData","Date","toLocaleTimeString","time","setTime","date","months","useEffect","setInterval","getDate","getMonth","getFullYear","App","currentCategory","setCurrentCategory","Provider","initialState","bestWorkDay","bestCreateDay","bestCategoryCreate","action","includes","createDate","newState","copy","Object","assign","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ecff0968.chunk.js","sourcesContent":["export const ADD_TASK = 'ADD_TASK';\nexport const REMOVE_TASK = 'REMOVE_TASK';\nexport const DONE_TASK = 'DONE_TASK';\nexport const INC_CREATE = 'INC_CREATE';\nexport const INC_DELETE = 'INC_DELETE';\nexport const INC_DONE = 'INC_DONE';\nexport const ADD_CATEGORY = 'ADD_CATEGORY';\n","\nimport {\n    ADD_CATEGORY,\n    ADD_TASK,\n    DONE_TASK,\n    INC_CREATE,\n    INC_DELETE,\n    INC_DONE,\n    REMOVE_TASK\n} from \"../actions/action\";\nlet nextTodoId = 0;\n\nexport const addCategory =(category)=>({\n    type: ADD_CATEGORY,\n    category,\n})\n\nexport const addTask = (text,category) =>({\n    type: ADD_TASK,\n    id:nextTodoId++,\n    text,\n    category,\n});\n\nexport const doneTask = (id) =>({\n    type: DONE_TASK,\n    id,\n});\n\nexport const removeTask = (id)=>({\n    type: REMOVE_TASK,\n    id\n})\n\nexport const inc_create_task= ()=>({\n    type:INC_CREATE,\n})\nexport const inc_delete_task= ()=>({\n    type:INC_DELETE,\n})\nexport const inc_done_task= ()=>({\n    type:INC_DONE,\n})\n","import React from 'react';\nimport {useDispatch} from \"react-redux\";\nimport {\n    doneTask,\n    inc_delete_task,\n    inc_done_task,\n    removeTask\n} from \"../store/actionCreators/actionCreators\";\nimport {AiOutlineCheck, CgTrashEmpty, MdOutlineNotes} from \"react-icons/all\";\nimport './Task.scss';\n\nconst Task = ({task}) =>{\n\n    const dispatch = useDispatch();\n\n    function buttonDoneClick(task){\n        if( !task.completeStatus) dispatch(inc_done_task())\n        dispatch(doneTask(task.id))\n\n    }\n    function buttonDeleteClick(id){\n        dispatch(removeTask(id))\n        dispatch(inc_delete_task())\n    }\n    return(\n\n        <div key={task.id} className='task-container'>\n                <p>{task.text}</p>\n            <div className='task-buttons-container'>\n                <div onClick={() =>  buttonDoneClick(task)} className='task-done-button'>\n                    <AiOutlineCheck color={task.completeStatus?('#555b65'):('#49a29b')} fontSize='1.5em'/>\n                </div>\n                <div className='task-change-button'>\n                    <MdOutlineNotes color={task.completeStatus?('#555b65'):('#ececec')} fontSize='1.5em'/>\n                </div>\n                <div onClick={() => buttonDeleteClick(task.id)} className='task-cancel-button'>\n                    <CgTrashEmpty color='#eb5454' fontSize='1.5em'/>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Task;","import {useSelector} from \"react-redux\";\nimport {useContext} from \"react\";\nimport Task from \"./Task\";\nimport Context from \"react-redux/lib/components/Context\";\nimport './TaskList.scss';\n\nconst TaskList = () =>{\n    const [context, setContext] = useContext(Context);\n    const taskList = useSelector(state => state)\n    console.log(taskList.todos)\n    return(\n        <div className='tasklist-container'>\n            <div className='tasklist-heading'> Активные задачи</div>\n                <div className='tasklist-place active'>\n                    {taskList.todos.filter(task => !task.completeStatus && task.category === context).map((task)=> (\n                        <Task task={task}/>\n                        ))}\n                </div>\n\n            <div className='tasklist-heading'> Завершенные задачи</div>\n                <div className='tasklist-place done'>\n                    {taskList.todos.filter(task => task.completeStatus && task.category === context).map((task)=>{\n                        return  <Task task={task} />\n                    })}\n                </div>\n        </div>\n    )\n}\n\nexport default TaskList;\n","import React, {useContext, useState} from 'react';\nimport {useDispatch} from \"react-redux\";\nimport {\n    addCategory,\n    addTask,\n    inc_create_task\n} from \"../store/actionCreators/actionCreators\";\nimport Context from \"react-redux/lib/components/Context\";\nimport './AddTask.scss';\n\nconst AddTask = ({ createTask }) => {\n    const [text, setText] = useState('Поучить React')\n    const [context, setContext] = useContext(Context);\n    const dispatch = useDispatch();\n\n    function handleChange(e) {\n        setText(e.target.value)\n    }\n    function handleKeyDown(e){\n        if (e.key === 'Enter') {\n            dispatch(addTask(text,context))\n            dispatch(inc_create_task())\n        }\n    }\n    function buttonCreateClick(){\n        dispatch(addTask(text,context))\n        dispatch(inc_create_task())\n    }\n\n    return(\n        <div className=\"addTask-container\">\n            <h1>Добавить задачу </h1>\n            <div className=\"addTask-content\">\n                <input className=\"addTask-input\" onKeyDown={handleKeyDown} value={text} onChange={handleChange}/>\n                <button className=\"addTask-button\" onClick={()=>buttonCreateClick()}>Добавить</button>\n            </div>\n\n        </div>\n    )\n}\n\nexport default AddTask;\n","import {useSelector} from \"react-redux\";\nimport './WeekProgress.scss';\n\nconst WeekProgress = () => {\n\n    const data = useSelector(state => state)\n    return(\n        <div className='weekprogress-container'>\n            <div className='weekprogress-header'>Успехи за неделю</div>\n            <div className='statistic-container'>\n                <div className='statistic-item'>\n                    <div className='statistic-description'>Создано</div>\n                    <div className='statistic-circle'>\n                        <div className='statistic-value'>{data.countCreate}</div>\n                        <div className='statistic-bottom-description'>задач</div>\n                    </div>\n                </div>\n                <div className='statistic-item'>\n                    <div className='statistic-description'>Завершено</div>\n                    <div className='statistic-circle'>\n                        <div className='statistic-value'>{data.countDone}</div>\n                        <div className='statistic-bottom-description'>задач</div>\n                    </div>\n                </div>\n                <div className='statistic-item'>\n                    <div className='statistic-description'>Удалено</div>\n                    <div className='statistic-circle'>\n                        <div className='statistic-value'>{data.countDelete}</div>\n                        <div className='statistic-bottom-description'>задач</div>\n                    </div>\n                </div>\n\n\n            </div>\n\n        </div>\n    )\n}\n\nexport default WeekProgress;","import {\n    AiOutlineHome,\n    AiOutlinePlusCircle,\n    BsPeople,\n    MdSportsFootball,\n    MdWorkOutline,\n    RiTodoFill\n} from \"react-icons/all\";\nimport React, {useContext, useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Context from \"react-redux/lib/components/Context\";\nimport './Navbar.scss';\nimport {addCategory} from \"../../store/actionCreators/actionCreators\";\n\nconst Navbar = () => {\n    const [context, setContext] = useContext(Context);\n    const [isShow, setIsShow]= useState(true)\n    const [newCategory,setNewCategory] = useState(null)\n    const dispatch = useDispatch();\n    const category = useSelector(state => state)\n\n    function handleKeyDown(e){\n        if (e.key === 'Enter') {\n            dispatch(addCategory(newCategory))\n            setIsShow(!isShow)\n            setNewCategory('')\n        }\n    }\n\n    function handleChange(e) {\n        setNewCategory(e.target.value)\n    }\n    const items = category.category.map((element) =>{\n        return(\n            <div className={context === element ? ('categoty-item-active'):('category-item')}\n                 onClick={()=>{setContext(element)} }>\n                <p className='category-name'>\n                    {element}\n                </p>\n            </div>\n        ) })\n\n    return(\n        <div className='navbar-container'>\n            <div className='navbar-header'>\n                <div className='navbar-icon'>\n                    <RiTodoFill color=\"#f9f9f9\" fontSize=\"3em\"> </RiTodoFill>\n                </div>\n                <div className='navbar-name-app'>Cool Todo</div>\n            </div>\n            <div className='navbar-category-paragraph'> Категории </div>\n\n            <div className='navbar-category-container'>\n                {items}\n                {isShow ? (\n                <div className='category-item' onClick={()=>{setIsShow(!isShow)}}>\n                    <AiOutlinePlusCircle fontSize=\"1.7em\"/>\n                    <p className='category-name' >\n                        Добавить\n                    </p>\n                </div>):\n                    (<div className='category-item-add'\n                  >\n                        <input placeholder=\"Категория\"\n                               value={newCategory}\n                               onChange={handleChange}\n                               className='category-item-input'\n                               onKeyDown={handleKeyDown}\n                        />\n                    </div>)\n                }\n            </div>\n            {/*<div className='navbar-statistic-paragraph'>Данные</div>*/}\n            {/*<div className='navbar-statistic-container'></div>*/}\n        </div>\n    )\n}\n\nexport default Navbar;\n","import {useEffect, useState} from \"react\";\nimport {AiOutlineCalendar, AiOutlineClockCircle} from \"react-icons/all\";\nimport './TimeData.scss'\n\nconst TimeData= () => {\n    const [time, setTime]= useState(new Date().toLocaleTimeString())\n    const [date, setDate] = useState(new Date())\n    function tick(){\n        setTime(new Date().toLocaleTimeString())\n    }\n    var months = ['января', 'февраля', 'марта', 'апреля', 'мая', 'июня', 'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря'];\n\n    function currentDate(){\n        return date.getDate() + ' '+ months[date.getMonth()] +' '+ date.getFullYear()\n    }\n\n    useEffect(()=>{\n        setInterval(() => tick(), 1000);\n    })\n\n    return(\n        <div className='timedata-container'>\n            <h1>Такс такс такс </h1>\n            <div className='timedata-wrapper'>\n                <div className='timedata-item'>\n                    <p>На часах у нас</p>\n                    <div className='timedata-val'>\n                        <AiOutlineClockCircle fontSize='2em'/>\n                        <p>{time}</p>\n                    </div>\n\n                </div>\n                <div className='timedata-item'>\n                    <p>А сегодня у нас</p>\n                    <div className='timedata-val'>\n                        <AiOutlineCalendar fontSize='2em'/>\n                        <p>{currentDate()} </p>\n                    </div>\n\n\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default TimeData;\n","import React, {useEffect, useState} from 'react';\nimport TaskList from \"./components/TaskList\";\nimport AddTask from \"./components/AddTask\";\nimport WeekProgress from \"./components/weekProgresBar/WeekProgress\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport TimeData from \"./components/timedata/TimeData\";\nimport Context from \"react-redux/lib/components/Context\";\nimport './App.scss';\nimport Header from \"./components/header/Header\";\nfunction App() {\n\n    const [currentCategory, setCurrentCategory] = useState('Дом')\n    const [rep, setRep] = useState(null)\n\n  return (\n    <div className=\"App\">\n        <Context.Provider value={[currentCategory, setCurrentCategory]}>\n            <Navbar/>\n\n            <div className='app-main'>\n\n                <div className='app-main-cont'>\n                    <div className=\"app-main-content\">\n                        <AddTask />\n                        <TaskList />\n                    </div>\n\n                <div className=\"app-additional-content\">\n                    <WeekProgress/>\n                    <TimeData/>\n\n                </div>\n                </div>\n            </div>\n\n        </Context.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","export const initialState={\n    todos: [],\n    countDelete: 0,\n    countDone: 0,\n    countCreate:0,\n    // Наибольшее кол-во завершенный задач(день)\n    bestWorkDay: null,\n    // Наибольшее кол-во созданный задач(день)\n    bestCreateDay: null,\n    //Наибольшее кол-во созданный задач в разделе(раздел)\n    bestCategoryCreate: null,\n    category: ['Дом','Работа','Семья','Спорт']\n}\n\n\n","import {\n    ADD_CATEGORY,\n    ADD_TASK,\n    DONE_TASK,\n    INC_CREATE,\n    INC_DELETE,\n    INC_DONE,\n    REMOVE_TASK\n} from \"../actions/action\";\nimport {initialState} from \"./inithialState\";\n\nconst todos = (state = initialState, action)=>{\n    if(typeof  state ==='undefined'){\n        return initialState;\n    }\n\n    switch (action.type){\n        case ADD_CATEGORY:{\n           return  state.category.includes(action.category) ? (state) :\n               ({...state, category: [...state.category,action.category]})\n\n        }\n        case ADD_TASK:\n            return {...state,\n                // сначала новый таск, чтобы он появлялся вверху списка\n                todos: [{id:action.id, category: action.category, text: action.text, completeStatus: false, createDate: new Date()},...state.todos]\n            }\n        case DONE_TASK: {\n\n            const newState = {...state, todos: state.todos.map((task) => {\n                if (task.id === action.id && !task.completeStatus) {\n                    task.completeStatus = !task.completeStatus;\n                }\n                return task;\n            })}\n            return newState;\n        }\n        case REMOVE_TASK:{\n            return {...state, todos: state.todos.filter((task) => task.id !== action.id)}\n        }\n        case INC_CREATE:{\n            let copy = Object.assign({},state);\n            copy.countCreate++;\n            return copy;\n        }\n        case INC_DELETE:{\n            let copy = Object.assign({},state);\n            copy.countDelete++;\n            return copy;\n        }\n        case INC_DONE:{\n            let copy = Object.assign({},state);\n            copy.countDone++;\n            return copy;\n        }\n        default:\n            return state;\n    }\n};\n\nexport default todos;\n","import {combineReducers} from \"@reduxjs/toolkit\";\nimport todos from \"./root\";\n\nexport default combineReducers({\n    todos\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as reducers from './store/reducers';\nimport {applyMiddleware, combineReducers, createStore} from \"@reduxjs/toolkit\";\nimport thunk from \"redux-thunk\";\nimport {Provider} from \"react-redux\";\nimport todos from \"./store/reducers/root\";\n\nconst store = createStore(todos,applyMiddleware(thunk))\n\nReactDOM.render(\n\n    <Provider store={store}>\n        <React.StrictMode>\n            <App />\n        </React.StrictMode>\n    </Provider>,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}